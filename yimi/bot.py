import discord
from discord.ext import commands
from discord.ext import tasks
import random
import asyncio
import yt_dlp as youtube_dl
from datetime import datetime
from pytz import timezone
import aiohttp
from PIL import Image, ImageDraw, ImageFont, ImageOps
import io
# Kh·ªüi t·∫°o c√°c intents v√† bot
# Kh·ªüi t·∫°o c√°c intents v√† bot
intents = discord.Intents.default()  # Kh·ªüi t·∫°o intents
intents.message_content = True  # B·∫≠t quy·ªÅn truy c·∫≠p n·ªôi dung tin nh·∫Øn

# Kh·ªüi t·∫°o bot v·ªõi intents v√† v√¥ hi·ªáu h√≥a l·ªánh help m·∫∑c ƒë·ªãnh
bot = commands.Bot(command_prefix=commands.when_mentioned_or("y!", "Y!"), intents=intents, help_command=None)
# Khai b√°o song_queues
song_queues = {}
# Modal th√™m nh·∫°c
class ThemNhacModal(discord.ui.Modal, title="Th√™m b√†i h√°t v√†o h√†ng ch·ªù"):
    ten_bai_hat = discord.ui.TextInput(
        label="Nh·∫≠p t√™n ho·∫∑c link b√†i h√°t",
        placeholder="V√≠ d·ª•: S∆°n T√πng MTP - Ch√∫ng Ta C·ªßa Hi·ªán T·∫°i",
        required=True)

    def __init__(self, ctx, voice_client):
        super().__init__()
        self.ctx = ctx
        self.voice_client = voice_client

    # async def on_submit(self, interaction: discord.Interaction):
        query = self.ten_bai_hat.value
        guild_id = interaction.guild.id

        if guild_id not in song_queues:
            song_queues[guild_id] = []
        song_queues[guild_id].append(query)

async def some_function(interaction, query):
    await interaction.response.send_message(
        f"üéµ ƒê√£ th√™m **{query}** v√†o danh s√°ch ph√°t!", ephemeral=True)

# C√°c n√∫t ƒëi·ªÅu khi·ªÉn nh·∫°c
from discord import PartialEmoji, ButtonStyle, Interaction, ui

class NutDieuKhien(discord.ui.View):
    def __init__(self, ctx, voice_client):
        super().__init__(timeout=None)
        self.ctx = ctx
        self.voice_client = voice_client

        # N√∫t Danh s√°ch ch·ªù (d√πng emoji t√πy ch·ªânh t·ª´ bot)
        nut_xem_hang_cho = discord.ui.Button(
            label="Danh s√°ch ch·ªù",
            style=ButtonStyle.secondary,
            emoji=PartialEmoji(name="mh", id=1366041952310526184)  # Thay name n·∫øu c·∫ßn
        )
        nut_xem_hang_cho.callback = self.nut_xem_hang_cho_callback
        self.add_item(nut_xem_hang_cho)

    @ui.button(label="T·∫°m d·ª´ng", style=ButtonStyle.secondary, emoji=PartialEmoji(name="tamdung", id=1366076936815902760))  # T·∫°m d·ª´ng
    async def nut_tam_dung(self, interaction: Interaction, button: ui.Button):
        if self.voice_client.is_playing():
            self.voice_client.pause()
            await ghi_log(self.ctx.bot, interaction.user, "T·∫°m d·ª´ng nh·∫°c")
            await interaction.response.send_message("‚è∏ ƒê√£ t·∫°m d·ª´ng nh·∫°c", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå Kh√¥ng c√≥ b√†i h√°t n√†o ƒëang ph√°t", ephemeral=True)

    @ui.button(label="Ti·∫øp t·ª•c", style=ButtonStyle.secondary, emoji=PartialEmoji(name="tieptuc", id=1366055566597947402))  # Ti·∫øp t·ª•c
    async def nut_tiep_tuc(self, interaction: Interaction, button: ui.Button):
        if self.voice_client.is_paused():
            self.voice_client.resume()
            await ghi_log(self.ctx.bot, interaction.user, "Ti·∫øp t·ª•c ph√°t nh·∫°c")
            await interaction.response.send_message("‚ñ∂ ƒê√£ ti·∫øp t·ª•c ph√°t nh·∫°c", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå Kh√¥ng c√≥ b√†i h√°t n√†o ƒëang t·∫°m d·ª´ng", ephemeral=True)

    @ui.button(label="B·ªè qua", style=ButtonStyle.secondary, emoji=PartialEmoji(name="boqua", id=1366056001861849148))  # B·ªè qua
    async def nut_bo_qua(self, interaction: Interaction, button: ui.Button):
        if self.voice_client.is_playing():
            self.voice_client.stop()
            await ghi_log(self.ctx.bot, interaction.user, "B·ªè qua b√†i h√°t")
            await interaction.response.send_message("‚è≠ ƒê√£ b·ªè qua b√†i h√°t!", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå Kh√¥ng c√≥ b√†i h√°t n√†o ƒë·ªÉ b·ªè qua!", ephemeral=True)

    @ui.button(label="Th√™m nh·∫°c", style=ButtonStyle.secondary, emoji=PartialEmoji(name="themnhac", id=1366056464229204049))  # Th√™m nh·∫°c
    async def nut_them_nhac(self, interaction: Interaction, button: ui.Button):
        modal = ThemNhacModal(ctx=self.ctx, voice_client=self.voice_client)
        await interaction.response.send_modal(modal)

    @ui.button(label=" D·ª´ng", style=ButtonStyle.secondary, emoji=PartialEmoji(name="dung", id=1366076202086961183))  # d·ª´ng
    async def nut_dung(self, interaction: Interaction, button: ui.Button):
        try:
            if self.voice_client and self.voice_client.is_connected():
                await self.voice_client.disconnect()
                song_queues.pop(interaction.guild.id, None)
                await interaction.response.send_message("‚èπ ƒê√£ d·ª´ng ph√°t v√† r·ªùi kh·ªèi k√™nh tho·∫°i", ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå Bot kh√¥ng ·ªü trong k√™nh tho·∫°i n√†o", ephemeral=True)
        except Exception as e:
            print(f"L·ªói khi d·ª´ng nh·∫°c: {str(e)}")

    # Callback cho n√∫t Danh s√°ch ch·ªù
    async def nut_xem_hang_cho_callback(self, interaction: Interaction):
        guild_id = interaction.guild.id
        queue = song_queues.get(guild_id, [])
        if queue:
            danh_sach = '\n'.join([f"{idx+1}. {song}" for idx, song in enumerate(queue)])
            await interaction.response.send_message(f"üìú **Danh s√°ch ch·ªù:**\n{danh_sach}", ephemeral=True)
        else:
            await interaction.response.send_message("üìù Danh s√°ch ch·ªù tr·ªëng!", ephemeral=True)

async def ghi_log(bot, user, action, details=None):
    try:
        log_channel = bot.get_channel(1341825853813690378)
        if not log_channel:
            return

        vn_tz = timezone('Asia/Ho_Chi_Minh')
        thoi_gian = datetime.now(vn_tz).strftime("%H:%M:%S %d/%m/%Y")

        embed = discord.Embed(
            title="üéµ Bot Music Log",
            color=discord.Color.from_rgb(255, 182, 193),
            timestamp=datetime.now(vn_tz)
        )
        embed.add_field(name="Ng∆∞·ªùi d√πng", value=f"{user.name} (`{user.id}`)", inline=True)
        embed.add_field(name="H√†nh ƒë·ªông", value=action, inline=True)

        if details:
            embed.add_field(name="Chi ti·∫øt", value=details, inline=False)

        thong_tin_kenh = "Kh√¥ng c√≥"
        if hasattr(user, 'voice') and user.voice and user.voice.channel:
            thong_tin_kenh = f"<#{user.voice.channel.id}>"
        embed.add_field(name="K√™nh", value=thong_tin_kenh, inline=True)
        embed.add_field(name="Th·ªùi gian", value=thoi_gian, inline=True)

        await log_channel.send(embed=embed)
    except Exception as e:
        print(f"L·ªói khi ghi log: {str(e)}")

@bot.event
async def on_ready():
    print(f'ƒê√£ ƒëƒÉng nh·∫≠p v·ªõi t√™n {bot.user.name}')
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.listening, name="MH Dev L·ªánh Y!help"))

# L·ªánh ph√°t nh·∫°c (play)
@bot.command(name='play', aliases=['p'])
async def phat_nhac(ctx, *, query: str):
    await ghi_log(bot, ctx.author, "Ph√°t nh·∫°c", f"Query: {query}")

    if not ctx.author.voice:
        await ctx.send("‚ùå B·∫°n c·∫ßn v√†o m·ªôt k√™nh tho·∫°i tr∆∞·ªõc!")
        return

    try:
        channel = ctx.author.voice.channel

        if ctx.voice_client is None:
            voice_client = await channel.connect()
        else:
            await ctx.voice_client.move_to(channel)
            voice_client = ctx.voice_client

        guild_id = ctx.guild.id
        if guild_id not in song_queues:
            song_queues[guild_id] = []

        if voice_client.is_playing() or voice_client.is_paused():
            song_queues[guild_id].append(query)
            await ctx.send("<a:NKV_book:1366040484446867517> ƒê√£ th√™m v√†o danh s√°ch ph√°t!")
            return

        await phat_bai_hat(ctx, voice_client, query)

    except Exception as e:
        await ctx.send(f"‚ùå C√≥ l·ªói x·∫£y ra: {str(e)}")
        if ctx.voice_client:
            await ctx.voice_client.disconnect()

async def phat_bai_hat(ctx, voice_client, query):
    await ctx.send("<a:xxx_6:1365209797867339818> ƒêang t√¨m ki·∫øm nh·∫°c...")

    ydl_opts = {
        'format': 'bestaudio/best',
        'nocheckcertificate': True,
        'default_search': 'auto',
        'quiet': True,
    }

    try:
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            if 'youtube.com' in query or 'youtu.be' in query:
                info = ydl.extract_info(query, download=False)
            else:
                result = ydl.extract_info(f"ytsearch:{query}", download=False)
                if not result or not result.get('entries'):
                    await ctx.send("‚ùå Kh√¥ng t√¨m th·∫•y b√†i h√°t!")
                    return
                info = result['entries'][0]

            url = info['url']
            thoi_luong = int(info.get('duration', 0))
            phut = thoi_luong // 60
            giay = thoi_luong % 60
            duration = f"{phut}:{giay:02d}"

            embed = discord.Embed(
                title="Th√¥ng tin b√†i h√°t",
                color=discord.Color.from_rgb(255, 182, 193)
            )
            embed.add_field(name="T√™n b√†i h√°t", value=info.get('title', 'Kh√¥ng c√≥ th√¥ng tin'), inline=False)
            embed.add_field(name="Th·ªùi l∆∞·ª£ng", value=duration, inline=True)
            embed.add_field(name="ƒêang ph√°t ·ªü", value=voice_client.channel.name, inline=True)
            embed.set_image(url=info.get('thumbnail', ''))

            vietnam_timezone = timezone('Asia/Ho_Chi_Minh')
            time_requested = datetime.now(vietnam_timezone).strftime("%H:%M:%S")
            embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi: {ctx.author.display_name} l√∫c {time_requested}")

            await ctx.send(embed=embed, view=NutDieuKhien(ctx, voice_client))

            ffmpeg_options = {
                'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
                'options': '-vn'
            }

            source = await discord.FFmpegOpusAudio.from_probe(url, **ffmpeg_options)
            voice_client.play(source, after=lambda e: asyncio.run_coroutine_threadsafe(phat_bai_tiep(ctx, voice_client), bot.loop))

    except Exception as e:
        await ctx.send(f"‚ùå L·ªói khi ph√°t nh·∫°c: {str(e)}")
        if voice_client and voice_client.is_connected():
            await voice_client.disconnect()

async def phat_bai_tiep(ctx, voice_client):
    guild_id = ctx.guild.id
    if guild_id in song_queues and song_queues[guild_id]:
        bai_tiep = song_queues[guild_id].pop(0)
        await phat_bai_hat(ctx, voice_client, bai_tiep)
    else:
        await asyncio.sleep(300)  # 5 ph√∫t
        if voice_client and voice_client.is_connected():
            await voice_client.disconnect()

# ====== Th√™m l·ªánh vi·∫øt t·∫Øt skip, autoplay, stop ======
@bot.command(name='skip', aliases=['s'])
async def bo_qua(ctx):
    if ctx.voice_client and ctx.voice_client.is_playing():
        ctx.voice_client.stop()
        await ctx.send("<a:xxx_muiten:1357713437815210094> ƒê√£ b·ªè qua b√†i h√°t!")

@bot.command(name='stop', aliases=['st'])
async def dung(ctx):
    if ctx.voice_client and ctx.voice_client.is_connected():
        await ctx.voice_client.disconnect()
        await ctx.send("<a:xxx_muiten:1357713437815210094> ƒê√£ d·ª´ng v√† r·ªùi kh·ªèi k√™nh tho·∫°i!")

import discord
from discord.ext import commands
import yt_dlp as youtube_dl
import asyncio

# Danh s√°ch 100 b√†i nh·∫°c chill (th√™m b√†i nh·∫°c v√†o danh s√°ch n√†y)
chill_tracks = [
    "https://www.youtube.com/watch?v=PKWeqACICDw",  # Example chill track 1
    "https://www.youtube.com/watch?v=bKIxd3dcYoA",  # Example chill track 2
    "https://www.youtube.com/watch?v=Ch9EUW0_aSI",  # Example chill track 3
    "https://www.youtube.com/watch?v=BhZ_aoCvMM8",  # Example chill track 4
    "https://www.youtube.com/watch?v=PQsWzCT8En8",  # Example chill track 5
    "https://www.youtube.com/watch?v=UJCuya1SRFk",  # Example chill track 6
    "https://www.youtube.com/watch?v=WegqhgGdTYA",  # Example chill track 7
    "https://www.youtube.com/watch?v=2TVXr5NOONE",  # Example chill track 8
    "https://www.youtube.com/watch?v=BTBrvavD4GA",  # Example chill track 9
    "https://www.youtube.com/watch?v=IQrWE4vh3BU",  # Example chill track 10
    "https://www.youtube.com/watch?v=HtXmD0PjfCM",  # Example chill track 11
    "https://www.youtube.com/watch?v=9vktlsjzJ6s",  # Example chill track 12
    "https://www.youtube.com/watch?v=H8GQpfsm72M",  # Example chill track 13
    "https://www.youtube.com/watch?v=z9H_NwWluVQ",  # Example chill track 14
    "https://www.youtube.com/watch?v=upRA1Lbg8lk",  # Example chill track 15
    "https://www.youtube.com/watch?v=TuKW46cRbBI",  # Example chill track 16
    "https://www.youtube.com/watch?v=gABxXOhZZ0Y",  # Example chill track 17
    "https://www.youtube.com/watch?v=NLJygtXLUtM",  # Example chill track 18
    "https://www.youtube.com/watch?v=z1o-dGkuINM",  # Example chill track 19
    "https://www.youtube.com/watch?v=hnxKVWfvuKg",  # Example chill track 20
]

# Bi·∫øn ƒë·ªÉ theo d√µi s·ªë b√†i nh·∫°c ƒë√£ ph√°t
current_play_count = 0

# H√†m ph√°t nh·∫°c t·ª´ URL
async def play_music(ctx, voice_client, url, loop=False):
    global current_play_count

    ydl_opts = {
        'format': 'bestaudio/best',
        'nocheckcertificate': True,
        'default_search': 'auto',
        'quiet': True,
    }

    try:
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=False)
            song_url = info['url']
            song_title = info['title']  # Ti√™u ƒë·ªÅ b√†i h√°t
            song_thumbnail = info['thumbnail']  # ·∫¢nh b√¨a b√†i h√°t
            song_duration = info['duration']  # Th·ªùi l∆∞·ª£ng b√†i h√°t

        # T·∫°o Embed hi·ªÉn th·ªã th√¥ng tin b√†i h√°t
        embed = discord.Embed(
            title=f"**__Chill N√†o :__** {song_title}",
            color=discord.Color.from_rgb(255, 182, 193)
        )
        embed.add_field(name="Th·ªùi gian", value=f"{song_duration // 60}:{song_duration % 60:02d}", inline=True)
        embed.add_field(name="ƒêang ph√°t ·ªü", value=f"{ctx.author.voice.channel.name}", inline=True)
        embed.set_image(url=song_thumbnail)  # Hi·ªÉn th·ªã ·∫£nh b√¨a
        embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi: {ctx.author.display_name}", icon_url=ctx.author.display_avatar.url)

        await ctx.send(embed=embed)

        ffmpeg_options = {
            'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
            'options': '-vn'
        }


        source = await discord.FFmpegOpusAudio.from_probe(song_url, **ffmpeg_options)
        voice_client.play(source, after=lambda e: asyncio.run_coroutine_threadsafe(play_next_song(ctx, voice_client, loop), bot.loop))

        current_play_count += 1  # TƒÉng s·ªë b√†i ƒë√£ ph√°t

    except Exception as e:
        await ctx.send(f"‚ùå L·ªói khi ph√°t nh·∫°c: {str(e)}")
        if voice_client and voice_client.is_connected():
            await voice_client.disconnect()
# H√†m ph√°t b√†i ti·∫øp theo t·ª´ danh s√°ch nh·∫°c
async def play_next_song(ctx, voice_client, loop=False):
    global current_play_count

    if current_play_count >= 20:  # N·∫øu ƒë√£ ph√°t 20 b√†i, b·∫Øt ƒë·∫ßu l·∫°i t·ª´ b√†i ƒë·∫ßu ti√™n
        current_play_count = 0  # Reset l·∫°i s·ªë b√†i ƒë√£ ph√°t

    if chill_tracks:
        next_song = chill_tracks.pop(0)  # L·∫•y b√†i nh·∫°c ti·∫øp theo t·ª´ danh s√°ch
        await play_music(ctx, voice_client, next_song, loop)
    else:
        await asyncio.sleep(300)  # N·∫øu kh√¥ng c√≥ b√†i nh·∫°c n√†o, ch·ªù 5 ph√∫t
        if voice_client and voice_client.is_connected():
            await voice_client.disconnect()
# L·ªánh autoplay ƒë·ªÉ t·ª± ƒë·ªông ph√°t nh·∫°c
@bot.command(name='autoplay', aliases=['ap'])
async def autoplay(ctx):
    if not ctx.author.voice:
        await ctx.send("‚ùå B·∫°n c·∫ßn v√†o m·ªôt k√™nh tho·∫°i tr∆∞·ªõc!")
        return

    channel = ctx.author.voice.channel
    if ctx.voice_client is None:
        voice_client = await channel.connect()
    else:
        await ctx.voice_client.move_to(channel)
        voice_client = ctx.voice_client
     
    # ƒê·ªïi tr·∫°ng th√°i bot th√†nh "ƒêang nghe nh·∫°c c·ªßa [T√™n b·∫°n]"
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.listening, name=f"ƒê·∫°i Ka MH ƒêang S·ª≠a Bot"))

    await ctx.send("<a:tho_chill:1366293196979699712>****chill c√πng t√¥i nh√©!****<a:tho_chill:1366293196979699712>")

    # B·∫Øt ƒë·∫ßu ph√°t nh·∫°c ƒë·∫ßu ti√™n t·ª´ danh s√°ch
    await play_music(ctx, voice_client, chill_tracks.pop(0), loop=True)  # B·∫≠t ch·∫ø ƒë·ªô loop
 
# ====================================================
 
# ====== L·ªánh 24/7 LOFI ======
@bot.command(name='247', aliases=['lofi'])
async def che_do_247(ctx):
    if not ctx.author.voice:
        await ctx.send("‚ùå B·∫°n c·∫ßn v√†o m·ªôt k√™nh tho·∫°i tr∆∞·ªõc!")
        return
    channel = ctx.author.voice.channel
    if ctx.voice_client is None:
        voice_client = await channel.connect()
    else:
        await ctx.voice_client.move_to(channel)
        voice_client = ctx.voice_client

    await play_lofi(voice_client)
    await ctx.send("üé∂ ƒê√£ b·∫≠t ch·∫ø ƒë·ªô ph√°t nh·∫°c 24/7!")

async def play_lofi(voice_client):
    # Danh s√°ch c√°c li√™n k·∫øt stream Lofi
    lofi_stream_urls = [
        "https://www.youtube.com/watch?v=eJ5-Z4-CYUM",  # Nh·∫°c Lofi Bu·ªìn Hot Nh·∫•t Hi·ªán Nay
        "https://www.youtube.com/watch?v=qRNOWYqg29U",  # Nh·∫°c Bu·ªìn Chill 
        "https://www.youtube.com/watch?v=TGQ0IsHoJ5s",  # Nh·∫°c Chill D·ªÖ Ng·ªß 2025
        "https://www.youtube.com/watch?v=MkQjF0f2Y38",  # V√¨ Ng√†y Em ƒê·∫πp Nh·∫•t L√† Ng√†y Anh M·∫•t Em Lofi 
        "https://www.youtube.com/watch?v=iw-a-ywJzew",  # Nh·∫°c Lofi Chill 
        "https://www.youtube.com/watch?v=K4PU0ssK-Qo"   # Nh·∫°c Chill D·ªÖ Ng·ªß - 2h Ch√¨m V√†o Nh·ªØng B·∫£n Lofi 
    ]

    try:
        # L·∫•y URL stream ng·∫´u nhi√™n t·ª´ danh s√°ch
        stream_url = random.choice(lofi_stream_urls)
        
        # T·∫£i th√¥ng tin video t·ª´ YouTube
        ydl_opts = {
            'format': 'bestaudio/best',
            'quiet': True,
            'no_warnings': True,
            'default_search': 'auto'
        }
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(stream_url, download=False)
            url = info['url']

        # T√πy ch·ªçn FFmpeg cho vi·ªác ph√°t √¢m thanh
        ffmpeg_options = {
            'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
            'options': '-vn'
        }
        
        # T·∫°o v√† ph√°t audio
        source = await discord.FFmpegOpusAudio.from_probe(url, **ffmpeg_options)
        voice_client.play(source, after=lambda e: asyncio.run_coroutine_threadsafe(play_lofi(voice_client), bot.loop))

    except Exception as e:
        print(f"L·ªói khi ph√°t lofi: {e}")
@bot.command(name='av', aliases=['avatar'])
async def avatar(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author

    embed = discord.Embed(
        title=f"·∫¢nh ƒë·∫°i di·ªán c·ªßa {member.display_name}",
        color=discord.Color.from_rgb(255, 182, 193)
    )
    embed.set_image(url=member.display_avatar.url)
    embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi Dev Yimi", icon_url=ctx.author.display_avatar.url)

    await ctx.send(embed=embed)
    
# ====================================================

@bot.command(name='setname', aliases=['sn', 'rename'])
@commands.has_permissions(manage_nicknames=True)
async def set_name(ctx, member: discord.Member, *, nickname: str):
    try:
        await member.edit(nick=nickname)
        await ctx.send(f"‚úÖ ƒê√£ ƒë·ªïi t√™n {member.mention} th√†nh **{nickname}**!")
    except discord.Forbidden:
        await ctx.send("‚ùå Bot kh√¥ng ƒë·ªß quy·ªÅn ƒë·ªÉ ƒë·ªïi t√™n ng∆∞·ªùi n√†y!")
    except Exception as e:
        await ctx.send(f"‚ùå ƒê·ªïi t√™n th·∫•t b·∫°i: {e}")
        
# ====================================================

@bot.command(name='support')
async def support(ctx):
    embed = discord.Embed(
        title="üí¨ H·ªó tr·ª£ Yimi Music",
        description="N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ ho·∫∑c b√°o l·ªói, h√£y tham gia server support c·ªßa ch√∫ng t√¥i!\n\nüîó [Tham gia Support Server](https://discord.gg/xomxamxi)",
        color=discord.Color.from_rgb(255, 182, 193)
    )
    embed.set_footer(text="Yimi Music Premium", icon_url=ctx.guild.me.display_avatar.url)
    await ctx.send(embed=embed)

# ====================================================

@bot.command(name='banner', aliases=['b√¨a', 'bia'])
async def banner(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author

    try:
        user = await bot.fetch_user(member.id)
        banner_url = user.banner.url if user.banner else None

        if banner_url:
            embed = discord.Embed(
                title=f"üéÄ Banner c·ªßa {member.display_name}",
                color=discord.Color.from_rgb(255, 182, 193)
            )
            embed.set_image(url=banner_url)
            embed.set_footer(text="Yimi Music Premium", icon_url=ctx.guild.me.display_avatar.url)
            await ctx.send(embed=embed)
        else:
            await ctx.send(f"‚ùå {member.mention} hi·ªán kh√¥ng c√≥ banner!")

    except Exception as e:
        await ctx.send(f"‚ùå ƒê√£ x·∫£y ra l·ªói: {e}")

# ====================================================

# --- Bi·∫øn to√†n c·ª•c ---
user_data = {}  # D√πng dict ƒë·ªÉ l∆∞u XP v√† Level t·∫°m th·ªùi
xp_per_level = 1000  # 1 c·∫•p c·∫ßn 1000 XP

# --- C·ªông XP m·ªói khi nh·∫Øn tin ---
@bot.event
async def on_message(message):
    if message.author.bot:
        return

    user_id = message.author.id

    # N·∫øu user ch∆∞a c√≥ d·ªØ li·ªáu
    if user_id not in user_data:
        user_data[user_id] = {"xp": 0, "level": 1, "last_add": datetime.now()}

    # Ki·ªÉm tra cooldown 10 gi√¢y
    now = datetime.now()
    if (now - user_data[user_id]["last_add"]).total_seconds() >= 10:
        # TƒÉng XP ng·∫´u nhi√™n t·ª´ 15 - 25
        xp_gain = random.randint(15, 25)
        user_data[user_id]["xp"] += xp_gain
        user_data[user_id]["last_add"] = now

        # Check l√™n c·∫•p
        if user_data[user_id]["xp"] >= user_data[user_id]["level"] * xp_per_level:
            user_data[user_id]["xp"] = 0
            user_data[user_id]["level"] += 1
            # G·ª≠i ch√∫c m·ª´ng
            await message.channel.send(f"üéâ {message.author.mention} ƒë√£ l√™n c·∫•p **{user_data[user_id]['level']}**!")

    await bot.process_commands(message)

# --- L·ªánh profile hi·ªÉn th·ªã ---
import discord
from discord.ext import commands
import aiohttp
import io
from PIL import Image, ImageDraw, ImageFont, ImageOps

@bot.command(name='profile', aliases=['pf'])
async def profile(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author

    # T·∫£i avatar v√† background anime
    async with aiohttp.ClientSession() as session:
        async with session.get(str(member.display_avatar.url)) as resp:
            avatar_bytes = await resp.read()

        anime_bg_url = "https://i.pinimg.com/736x/7f/6d/c5/7f6dc5a74f7a8b2bd60d3adf4b1a3338.jpg"  # Link background anime ƒë·∫πp
        async with session.get(anime_bg_url) as bg_resp:
            bg_bytes = await bg_resp.read()

    # M·ªü avatar v√† bo tr√≤n
    avatar = Image.open(io.BytesIO(avatar_bytes)).resize((150, 150)).convert('RGBA')
    mask = Image.new('L', (150, 150), 0)
    draw_mask = ImageDraw.Draw(mask)
    draw_mask.ellipse((0, 0, 150, 150), fill=255)
    avatar = ImageOps.fit(avatar, (150, 150))
    avatar.putalpha(mask)

    # T·∫°o vi·ªÅn avatar
    border_size = 8
    bordered_avatar = Image.new('RGBA', (avatar.width + border_size*2, avatar.height + border_size*2), (255, 255, 255, 0))
    mask_with_border = Image.new('L', (avatar.width + border_size*2, avatar.height + border_size*2), 0)
    draw_border = ImageDraw.Draw(mask_with_border)
    draw_border.ellipse((0, 0, avatar.width + border_size*2, avatar.height + border_size*2), fill=255)
    bordered_avatar.paste(avatar, (border_size, border_size), avatar)

    # M·ªü background
    background = Image.open(io.BytesIO(bg_bytes)).resize((600, 300)).convert('RGBA')
    draw = ImageDraw.Draw(background)

    # Font ch·ªØ
    try:
        font_big = ImageFont.truetype("arial.ttf", 35)
        font_small = ImageFont.truetype("arial.ttf", 22)
    except:
        font_big = ImageFont.load_default()
        font_small = ImageFont.load_default()

    # D√°n avatar
    background.paste(bordered_avatar, (30, 75), mask_with_border)

    # Random level, xp, rank
    level = random.randint(1, 50)
    xp = random.randint(100, 5000)
    ranks = ['Newbie', 'Rising Star', 'Pro Player', 'Legendary', 'Mythical']
    rank = random.choice(ranks)

    # H√†m v·∫Ω ch·ªØ c√≥ vi·ªÅn
    def draw_text_with_outline(draw, position, text, font, text_color, outline_color='black', outline_width=2):
        x, y = position
        for ox in range(-outline_width, outline_width+1):
            for oy in range(-outline_width, outline_width+1):
                draw.text((x+ox, y+oy), text, font=font, fill=outline_color)
        draw.text((x, y), text, font=font, fill=text_color)

    # Vi·∫øt t√™n + level + xp + rank
    draw_text_with_outline(draw, (220, 60), f"{member.display_name}", font_big, (255, 255, 255))
    draw_text_with_outline(draw, (220, 110), f"üèÖ C·∫•p b·∫≠c: {rank}", font_small, (255, 255, 255))
    draw_text_with_outline(draw, (220, 150), f"‚ú® Level: {level}", font_small, (255, 255, 255))
    draw_text_with_outline(draw, (220, 190), f"‚ö° XP: {xp} / 5000", font_small, (255, 255, 255))

    # Thanh XP
    bar_x, bar_y = 220, 230
    bar_width = 320
    bar_height = 20
    filled_width = int((xp / 5000) * bar_width)

    draw.rectangle((bar_x, bar_y, bar_x + bar_width, bar_y + bar_height), fill=(211, 211, 211))  # n·ªÅn x√°m nh·∫°t
    draw.rectangle((bar_x, bar_y, bar_x + filled_width, bar_y + bar_height), fill=(255, 105, 180))  # thanh m√†u h·ªìng

    # L∆∞u h√¨nh
    with io.BytesIO() as image_binary:
        background.save(image_binary, 'PNG')
        image_binary.seek(0)

        file = discord.File(fp=image_binary, filename='profile.png')

        embed = discord.Embed(
            title="üå∏ H·ªì s∆° th√†nh vi√™n - Yimi Music",
            color=discord.Color.from_rgb(255, 182, 193)
        )
        embed.set_image(url="attachment://profile.png")
        embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi {ctx.author.display_name}", icon_url=ctx.author.display_avatar.url)

        await ctx.send(file=file, embed=embed)
# ====================================================

@bot.command(name='chat')
async def say(ctx, *, message: str):
    await ctx.message.delete()  # X√≥a tin nh·∫Øn c·ªßa ng∆∞·ªùi g·ªçi l·ªánh
    await ctx.send(message)      # G·ª≠i l·∫°i n·ªôi dung

# ====================================================
import calendar
from datetime import datetime
import discord
import requests

# API key c·ªßa b·∫°n t·ª´ OpenWeatherMap
API_KEY = '63ec0ccb1fd3739a87941753e8e13e20'

@bot.command(name='lich')
async def lich(ctx):
    # L·∫•y ng√†y th√°ng hi·ªán t·∫°i
    today = datetime.today()
    month = today.month
    year = today.year
    cal = calendar.month(year, month)

    # L·∫•y ng√†y, th√°ng, nƒÉm v√† gi·ªù hi·ªán t·∫°i
    current_date = today.strftime("%d/%m/%Y")
    current_time = today.strftime("%H:%M:%S")

    # G·ª≠i y√™u c·∫ßu t·ªõi OpenWeatherMap API ƒë·ªÉ l·∫•y nhi·ªát ƒë·ªô t·∫°i Vi·ªát Nam
    city = "Hanoi"  # B·∫°n c√≥ th·ªÉ thay ƒë·ªïi th√†nh c√°c th√†nh ph·ªë kh√°c n·∫øu c·∫ßn
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric&lang=vi"
    
    response = requests.get(url)
    data = response.json()

    if data["cod"] == 200:
        temperature = data["main"]["temp"]
        weather_description = data["weather"][0]["description"]
    else:
        temperature = "Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu"
        weather_description = "Kh√¥ng c√≥ th√¥ng tin"

    # T·∫°o Embed v·ªõi m√†u h·ªìng v√† hi·ªÉn th·ªã th√¥ng tin
    embed = discord.Embed(
        title=f"L·ªãch th√°ng {month}/{year}",
        description=f"```{cal}```",
        color=discord.Color.from_rgb(255, 182, 193)  # M√†u h·ªìng
    )
    
    embed.add_field(name="Ng√†y th√°ng", value=current_date, inline=True)
    embed.add_field(name="Gi·ªù hi·ªán t·∫°i", value=current_time, inline=True)
    embed.add_field(name="Nhi·ªát ƒë·ªô t·∫°i H√† N·ªôi Vi·ªát Nam ", value=f"{temperature}¬∞C - {weather_description}", inline=False)
    
    await ctx.send(embed=embed)

    # ====================================================
@bot.command(name='quote')
async def quote(ctx):
    quotes = [
        "<a:p_ccl8:1366233647174258809> ƒê·ª´ng ƒë·ªÉ n·ªói s·ª£ ngƒÉn b·∫°n l·∫°i. C·ª© ƒëi ƒëi!",
        "<a:p_ccl4:1366233833464266852>  Ng∆∞·ªùi th√†nh c√¥ng kh√¥ng bao gi·ªù b·ªè cu·ªôc.",
        "<a:p_ccl5:1366234012120776786>  H√£y tin v√†o h√†nh tr√¨nh c·ªßa ch√≠nh m√¨nh.",
        "<a:p_ccl9:1366234157403078758>  Cu·ªôc s·ªëng gi·ªëng nh∆∞ m·ªôt cu·ªën s√°ch, m·ªói ng√†y l√† m·ªôt trang m·ªõi.",
        "<a:p_ccl7:1366234268266795093>  Khi b·∫°n d·ª´ng l·∫°i, h√£y nh·ªõ l√Ω do b·∫°n b·∫Øt ƒë·∫ßu."
        ]
    random_quote = random.choice(quotes)

    embed = discord.Embed(
        title="<a:p_zppl24:1366234463939461200>  Yimi Quote <a:p_zppl24:1366234463939461200> ",
        description=random_quote,
        color=discord.Color.from_rgb(255, 182, 193)
    )
    embed.set_footer(text="‚ú® Lu√¥n l·∫°c quan v√† y√™u ƒë·ªùi nh√©!", icon_url=ctx.guild.me.display_avatar.url)
    
    await ctx.send(embed=embed)
    # ====================================================

    # ====================================================
# L·ªánh help
@bot.command(name='help')
async def help_command(ctx) :
    help_texts = {  
        "<a:nhac:1366094643846185031> Ph√°t nh·∫°c": "`y!play <t√™n>` ho·∫∑c `y!p <t√™n>`",
        "<a:skip:1366097992830160957> B·ªè qua b√†i h√°t": "`y!skip` ho·∫∑c `y!s`",
        "<a:cut:1366098202239176876> D·ª´ng nh·∫°c": "`y!stop` ho·∫∑c `y!st`",
        "<a:auto:1366098411975348334> Auto Play": "`y!autoplay` ho·∫∑c `y!ap`",
        "<a:chill:1366098612135661650> Ph√°t Lofi 24/7": "`y!247`",
        "<a:xxx_5:1365209715336024124> C√°c l·ªánh check": "`y!profile`",
        "<a:check:1366098880889884723> Xem avatar & banner": "`y!banner @user` ho·∫∑c `y!bia @user`",
        "<a:doiten:1366099169332297870> ƒê·ªïi nickname": "`y!setname @user <nickname>`",
        "<a:sp:1366099407975743591> H·ªó tr·ª£ Bot": "`y!support`",
        "<a:chill:1366098612135661650> Chat": "`y!chat <n·ªôi dung>` ‚Äî Bot chat thay b·∫°n",
        "<a:xxx_s1:1356891549480386691> Say": "`y!say <n·ªôi dung>` ‚Äî Bot ƒë·ªçc vƒÉn b·∫£n thay b·∫°n", 
        "<a:xxx_thobonla:1359158478093942915> c√°c l·ªánh hay ho ": "`y!profile` -  `y!quote` ",
        "<a:1702_dongho:1366335769597313024> ng√†y gi·ªù v√† nhi·ªát ƒë·ªô ": " `y!lich` ",
        "<a:xxx_hopqua:1358449105281749127>  m·ªü qu√† t·ª´ gacha ": " `y!gacha` ",
    }
    
    # Ti·∫øp t·ª•c v·ªõi c√°c l·ªánh kh√°c trong h√†m
    embed = discord.Embed(
        title="H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Bot",
        description="D∆∞·ªõi ƒë√¢y l√† c√°c l·ªánh b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng:",
        color=discord.Color.from_rgb(255, 182, 193)
    )
    
    for name, desc in help_texts.items():
        embed.add_field(name=name, value=desc, inline=False)  # Th√™m c√°c l·ªánh v√†o embed

    await ctx.send(embed=embed)
    # ==================================================

import discord
from discord.ext import commands
import os
import sys
import requests
import os

# L·ªánh thay ƒë·ªïi Bio
@bot.command()
async def set_bio(ctx, *, bio: str):
    """Thay ƒë·ªïi ti·ªÉu s·ª≠ (status) c·ªßa bot."""
    try:
        # Thay ƒë·ªïi bio (status)
        await bot.change_presence(activity=discord.Game(name=bio))
        await ctx.send(f"Ti·ªÉu s·ª≠ c·ªßa bot ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh: {bio}")
    except Exception as e:
        await ctx.send(f"ƒê√£ x·∫£y ra l·ªói khi thay ƒë·ªïi ti·ªÉu s·ª≠: {str(e)}")

# L·ªánh reset (kh·ªüi ƒë·ªông l·∫°i bot)
@bot.command()
async def reset(ctx):
    """L·ªánh kh·ªüi ƒë·ªông l·∫°i bot."""
    await ctx.send("Bot ƒëang kh·ªüi ƒë·ªông l·∫°i...")
    os.execv(sys.executable, ['python'] + sys.argv)  # Kh·ªüi ƒë·ªông l·∫°i script bot
 # ====================================================
import discord
from discord.ext import commands
import random

# L∆∞u tr·ªØ ID c·ªßa admin bot ch√≠nh
admin_id = "1352385546470691009"  # Thay 'YOUR_ADMIN_ID' b·∫±ng ID Discord c·ªßa admin ch√≠nh (ch·ªâ ng∆∞·ªùi n√†y m·ªõi c√≥ quy·ªÅn c·∫•p admin)

# Gi·∫£ l·∫≠p kho th·∫ª c·ªßa ng∆∞·ªùi ch∆°i
user_inventory = {}
user_daily_quota = {}  # L∆∞u tr·ªØ l∆∞·ª£t quay mi·ªÖn ph√≠ cho m·ªói ng∆∞·ªùi ch∆°i
user_ryo = {}  # L∆∞u tr·ªØ s·ªë ti·ªÅn Ryo c·ªßa ng∆∞·ªùi ch∆°i
admin_list = {}  # L∆∞u tr·ªØ danh s√°ch nh·ªØng ng∆∞·ªùi c√≥ quy·ªÅn admin

# Danh s√°ch th·∫ª c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c t·ª´ gacha, bao g·ªìm c·∫£ h√¨nh ·∫£nh v√† gi·∫£i th∆∞·ªüng
cards = [
    {"name": "Chunin Kakashi", "strength": 380, "rank": "Chunin", "rarity": "gi·∫£i ba", "image_url": "https://i.imgur.com/KqKjvNb.jpeg", "reward": "20.000 <:OWO:1359511986467115039>"},
    {"name": "Uchiha Sasuke", "strength": 590, "rank": "Jounin", "rarity": "gi·∫£i nh√¨", "image_url": "https://i.imgur.com/GzACF70.png", "reward": "500.000 <:OWO:1359511986467115039>"},
    {"name": "Pain", "strength": 570, "rank": "Jounin", "rarity": "gi·∫£i ba", "image_url": "https://i.imgur.com/ilrcwI8.jpeg", "reward": "20.000 <:OWO:1359511986467115039>"},
    {"name": "Naruto Uzumaki", "strength": 650, "rank": "Legendary", "rarity": "gi·∫£i nh·∫•t", "image_url": "https://i.imgur.com/TkKEo8H.jpeg", "reward": "2.000.000 <:OWO:1359511986467115039>"},
    {"name": "Itachi Uchiha", "strength": 700, "rank": "Legendary", "rarity": "gi·∫£i nh√¨", "image_url": "https://i.imgur.com/QbdTzgr.jpeg", "reward": "500.000 <:OWO:1359511986467115039>"}
]

# L·ªánh ƒë·ªÉ admin ch√≠nh c·∫•p quy·ªÅn admin cho ng∆∞·ªùi kh√°c
@bot.command()
async def add_admin(ctx, member: discord.Member):
    """C·∫•p quy·ªÅn admin cho ng∆∞·ªùi ch∆°i (ch·ªâ admin ch√≠nh)."""
    if str(ctx.author.id) != admin_id:
        await ctx.send("B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!")
        return

    # Th√™m ng∆∞·ªùi ch∆°i v√†o danh s√°ch admin
    admin_list[member.id] = True
    await ctx.send(f"{member.name} ƒë√£ ƒë∆∞·ª£c c·∫•p quy·ªÅn admin!")

# L·ªánh ki·ªÉm tra xem ng∆∞·ªùi ch∆°i c√≥ ph·∫£i admin hay kh√¥ng
@bot.command()
async def is_admin(ctx, member: discord.Member):
    """Ki·ªÉm tra ng∆∞·ªùi ch∆°i c√≥ ph·∫£i admin hay kh√¥ng."""
    if member.id in admin_list:
        await ctx.send(f"{member.name} l√† admin.")
    else:
        await ctx.send(f"{member.name} kh√¥ng ph·∫£i l√† admin.")

# L·ªánh th√™m l∆∞·ª£t quay cho ng∆∞·ªùi ch∆°i (ch·ªâ admin m·ªõi c√≥ quy·ªÅn)
@bot.command()
async def add_luot_quay(ctx, member: discord.Member, amount: int):
    """C·∫•p th√™m l∆∞·ª£t quay cho ng∆∞·ªùi ch∆°i (ch·ªâ admin ch√≠nh)."""
    if str(ctx.author.id) != admin_id:
        await ctx.send("B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!")
        return

    if member.id not in user_daily_quota:
        user_daily_quota[member.id] = 0  # N·∫øu ng∆∞·ªùi ch∆°i ch∆∞a c√≥ d·ªØ li·ªáu, kh·ªüi t·∫°o
    user_daily_quota[member.id] += amount  # Th√™m s·ªë l∆∞·ª£t quay cho ng∆∞·ªùi ch∆°i
    await ctx.send(f"{member.name} ƒë√£ ƒë∆∞·ª£c c·∫•p th√™m {amount} l∆∞·ª£t quay!")

# L·ªánh mua gacha
@bot.command()
async def gacha(ctx, use_ryo: bool = False):
    """M·ªü gacha ƒë·ªÉ nh·∫≠n th·∫ª ng·∫´u nhi√™n."""
    # Ki·ªÉm tra n·∫øu ng∆∞·ªùi ch∆°i c√≥ l∆∞·ª£t quay mi·ªÖn ph√≠ ho·∫∑c ƒë·ªß Ryo ƒë·ªÉ quay
    if ctx.author.id not in user_daily_quota:
        user_daily_quota[ctx.author.id] = 1  # M·ªói ng∆∞·ªùi ch∆°i c√≥ m·ªôt l∆∞·ª£t quay mi·ªÖn ph√≠ m·ªói ng√†y
    if ctx.author.id not in user_ryo:
        user_ryo[ctx.author.id] = 50000  # Ti·ªÅn kh·ªüi ƒëi·ªÉm

    # Ki·ªÉm tra l∆∞·ª£t quay mi·ªÖn ph√≠
    if user_daily_quota[ctx.author.id] > 0:
        can_gacha = True
        user_daily_quota[ctx.author.id] -= 1  # D√πng m·ªôt l∆∞·ª£t quay mi·ªÖn ph√≠
        await ctx.send("B·∫°n ƒë√£ s·ª≠ d·ª•ng l∆∞·ª£t quay")
    elif use_ryo and user_ryo[ctx.author.id] >= 10000:  # N·∫øu ng∆∞·ªùi ch∆°i mu·ªën d√πng ti·ªÅn ƒë·ªÉ mua th√™m l∆∞·ª£t quay
        can_gacha = True
        user_ryo[ctx.author.id] -= 10000  # Tr·ª´ ƒëi 10000 Ryo ƒë·ªÉ mua l∆∞·ª£t quay
        await ctx.send("B·∫°n ƒë√£ s·ª≠ d·ª•ng 10,000 Ryo ƒë·ªÉ mua m·ªôt l∆∞·ª£t quay!")
    else:
        can_gacha = False
        await ctx.send("B·∫°n kh√¥ng c√≤n l∆∞·ª£t quay mi·ªÖn ph√≠ v√† kh√¥ng ƒë·ªß Ryo ƒë·ªÉ mua l∆∞·ª£t quay.")

    if not can_gacha:
        # N·∫øu kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán quay, hi·ªÉn th·ªã th√¥ng b√°o th·∫•t b·∫°i
        embed = discord.Embed(
            title="üéâ B·∫°n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£!",
            description="B·∫°n kh√¥ng c√≥ ƒë·ªß l∆∞·ª£t quay ho·∫∑c Ryo ƒë·ªÉ th·ª±c hi·ªán quay.",
            color=discord.Color.red()
        )
        embed.set_footer(text="H√£y th·ª≠ l·∫°i sau ho·∫∑c mua th√™m v√© quay.")
        await ctx.send(embed=embed)
        return  # D·ª´ng l·ªánh n·∫øu kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán quay

    # C∆° ch·∫ø t·ª∑ l·ªá ng·∫´u nhi√™n
    rarity_chances = {
        "gi·∫£i ba": 0.9,  # 70% cho th·∫ª th∆∞·ªùng
        "gi·∫£i nh√¨": 0.01,    # 20% cho th·∫ª hi·∫øm
        "gi·∫£i nh·∫•t": 0.001  # 10% cho th·∫ª huy·ªÅn tho·∫°i
    }

    # Ch·ªçn th·∫ª ng·∫´u nhi√™n theo t·ª∑ l·ªá
    rarity = random.choices(
        list(rarity_chances.keys()), 
        weights=list(rarity_chances.values()), 
        k=1
    )[0]

    # L·ªçc c√°c th·∫ª theo rarity
    available_cards = [card for card in cards if card["rarity"] == rarity]
    chosen_card = random.choice(available_cards)

    # Th√™m th·∫ª v√†o kho c·ªßa ng∆∞·ªùi ch∆°i
    if ctx.author.id not in user_inventory:
        user_inventory[ctx.author.id] = []

    user_inventory[ctx.author.id].append(chosen_card)

    # T·∫°o embed ƒë·ªÉ hi·ªÉn th·ªã th·∫ª v·ªõi h√¨nh ·∫£nh
    embed = discord.Embed(
        title="<a:xxx_canhtrai:1354516494708506897>  B·∫°n m·ªü th·∫ª gacha! <a:xxx_canhphai:1354516607262789713>",
        description=f"<:prd_topvoice:1366435381729562734> ƒê·ªô hi·∫øm: {chosen_card['rarity']}\n"
                    f"<a:xxx_ga:1359903185849815080> Ph·∫ßn th∆∞·ªüng: {chosen_card['reward']}",
        color=discord.Color.green()
    )
    embed.set_thumbnail(url="https://i.imgur.com/ITXacnI.png")  # Th√™m m·ªôt bi·ªÉu t∆∞·ª£ng may m·∫Øn
    embed.add_field(name="<:prd_topvoice:1366435381729562734>ƒê·ªô hi·∫øm", value=f"**{chosen_card['rarity']}**", inline=False)
    embed.add_field(name="<a:xxx_ga:1359903185849815080> Ph·∫ßn th∆∞·ªüng", value=f"**{chosen_card['reward']}**", inline=False)
    embed.set_image(url=chosen_card["image_url"])  # Th√™m h√¨nh ·∫£nh c·ªßa th·∫ª

    # G·ª≠i th√¥ng b√°o m·ªü gacha v·ªõi embed
    await ctx.send(embed=embed)

# L·ªánh ki·ªÉm tra kho
@bot.command()
async def inventory(ctx):
    """Ki·ªÉm tra kho th·∫ª c·ªßa ng∆∞·ªùi d√πng."""
    if ctx.author.id not in user_inventory or not user_inventory[ctx.author.id]:
        await ctx.send("Kho c·ªßa b·∫°n hi·ªán t·∫°i tr·ªëng. H√£y m·ªü gacha b·∫±ng l·ªánh `!gacha`!")
        return

    inventory_list = user_inventory[ctx.author.id]
    inventory_text = "Kho c·ªßa b·∫°n:\n"
    for card in inventory_list:
        inventory_text += f"- {card['name']} (S·ª©c m·∫°nh: {card['strength']})\n"
    
    await ctx.send(inventory_text)

# L·ªánh gi√∫p (help)
@bot.command()
async def help_command(ctx):
    """Hi·ªÉn th·ªã c√°c l·ªánh bot."""
    embed = discord.Embed(
        title="Danh s√°ch l·ªánh",
        description="D∆∞·ªõi ƒë√¢y l√† danh s√°ch c√°c l·ªánh c√≥ s·∫µn c·ªßa bot",
        color=discord.Color.blue()
    )
    embed.add_field(name="!gacha", value="M·ªü gacha ƒë·ªÉ nh·∫≠n th·∫ª ng·∫´u nhi√™n.", inline=False)
    embed.add_field(name="!inventory", value="Ki·ªÉm tra kho th·∫ª c·ªßa b·∫°n", inline=False)
    embed.add_field(name="!add_admin", value="C·∫•p quy·ªÅn admin cho ng∆∞·ªùi kh√°c (ch·ªâ admin ch√≠nh)", inline=False)
    embed.add_field(name="!is_admin", value="Ki·ªÉm tra ng∆∞·ªùi ch∆°i c√≥ ph·∫£i admin hay kh√¥ng.", inline=False)
    embed.add_field(name="!add_luot_quay", value="C·∫•p th√™m l∆∞·ª£t quay cho ng∆∞·ªùi ch∆°i (ch·ªâ admin ch√≠nh)", inline=False)
    await ctx.send(embed=embed)

# Cu·ªëi c√πng, kh√¥ng ƒë∆∞·ª£c ƒë·∫∑t trong b·∫•t k·ª≥ h√†m n√†o n·ªØa
TOKEN = os.getenv("DISCORD_TOKEN")

